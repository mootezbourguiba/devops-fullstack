# --- Configuration JPA / Hibernate ---
# Désactive la génération automatique du schéma par Hibernate.
# Nous utilisons schema.sql pour créer les tables.
# Options possibles: 'none', 'validate', 'update', 'create', 'create-drop'
# Utiliser 'none' car on gère le schéma via schema.sql.
spring.jpa.hibernate.ddl-auto=none

# --- Initialisation SQL ---
# Indique à Spring Boot quand exécuter les scripts SQL (schema.sql, data.sql)
# 'always' : Exécute toujours au démarrage (bon pour le dev/test).
# 'embedded' : Seulement pour les bases de données embarquées (H2, HSQLDB).
# 'never' : Ne jamais exécuter (préférable en prod avec Flyway/Liquibase).
spring.sql.init.mode=always

# Spécifie la plateforme pour aider Spring à adapter les scripts si nécessaire (optionnel si dialecte bien détecté)
spring.sql.init.platform=mysql

# --- Configuration de la base de données ---
# Assure-toi que le port 3308 est correct pour ton instance MySQL
spring.datasource.url=jdbc:mysql://localhost:3308/devopsdb?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password= # Laisse vide si pas de mot de passe, sinon mets-le ici
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# --- Autres propriétés JPA ---
# Affiche les requêtes SQL exécutées par Hibernate dans les logs
spring.jpa.show-sql=true
# Formate le SQL affiché pour une meilleure lisibilité
spring.jpa.properties.hibernate.format_sql=true
# Le dialecte est généralement auto-détecté pour les versions récentes de Spring Boot/Hibernate
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# --- Propriétés du serveur (si nécessaire) ---
# server.port=8081 # Décommente pour changer le port par défaut (8080)