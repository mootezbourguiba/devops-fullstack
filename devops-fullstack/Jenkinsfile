pipeline {
    agent none

    environment {
        DOCKERHUB_CREDENTIALS_ID = 'dockerhub-credentials'
        DOCKERHUB_USERNAME       = "mootezbourguiba365"
        IMAGE_FRONTEND           = "${DOCKERHUB_USERNAME}/devops-frontend:latest"
        IMAGE_BACKEND            = "${DOCKERHUB_USERNAME}/devops-backend:latest"
        SSH_CREDENTIALS_ID       = 'ssh-credentials-mon-serveur'
        REMOTE_DEPLOY_PATH       = '/home/user/devops-app'
    }

    stages {
        stage('Checkout SCM') {
            agent any
            steps {
                checkout scm
            }
        }

        stage('Build Backend') {
            agent {
                docker {
                    image 'maven:3.8.6-openjdk-17'
                    args '-v \$HOME/.m2:/root/.m2'  // Échappement du $ dans le volume
                }
            }
            steps {
                dir('devops-fullstack/backend/backendDevops') {
                    sh ''' 
                        set -ex
                        echo "Chemin actuel : \$$(pwd)"  // Utilisation de \$ pour afficher $ dans la commande shell
                        ls -la
                        mvn clean package
                    '''
                }
            }
        }

        stage('Build Frontend') {
            agent {
                docker {
                    image 'node:20-alpine'
                    args '-u root'
                }
            }
            steps {
                dir('frontend') {
                    sh '''
                        set -ex
                        npm install
                        npm run build
                    '''
                }
            }
        }

        stage('Docker Build & Push') {
            agent any
            steps {
                withCredentials([usernamePassword(
                    credentialsId: env.DOCKERHUB_CREDENTIALS_ID,
                    passwordVariable: 'DOCKERHUB_PASSWORD',
                    usernameVariable: 'DOCKERHUB_USERNAME'
                )]) {
                    script {
                        sh "docker login -u ${env.DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}"
                        
                        dir('devops-fullstack/backend/backendDevops') {
                            sh """
                                docker build -t ${env.IMAGE_BACKEND} .
                                docker push ${env.IMAGE_BACKEND}
                            """
                        }

                        dir('frontend') {
                            sh """
                                docker build -t ${env.IMAGE_FRONTEND} .
                                docker push ${env.IMAGE_FRONTEND}
                            """
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            agent any
            steps {
                sshagent([env.SSH_CREDENTIALS_ID]) {
                    sh """
                        scp docker-compose.yml user@server:\${env.REMOTE_DEPLOY_PATH}/  // Utilisation de \${} pour échappement
                        ssh user@server " \\
                            cd \${env.REMOTE_DEPLOY_PATH} && \\
                            docker compose up -d \\
                        "
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
